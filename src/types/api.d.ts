/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/data.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current card data in JSON format. */
        get: operations["getJsonData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/data.csv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current card data in CSV format. */
        get: operations["getCsvData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/data.yaml": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current card data in YAML format. */
        get: operations["getYamlData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Credit: {
            /**
             * @description A brief description for what the credit is for.
             * @example Statement Credit
             */
            description: string;
            /**
             * @description The face value of the credit. Note that there is another attribute, `weight`, that we generally multiply this by to get how much the credit as "actually" worth. This is the original, at-a-glance value.
             * @example 100
             */
            value: number;
            /**
             * @description The weight of the credit. This is a multiplier that we use to determine how much the credit is actually worth. For example, a 1.0 weight means that the credit is very easy to actually use. A .25 weight means the credit is very difficult to use and should be valued around 25% of its face value.
             * @example 0.5
             */
            weight: number;
            currency?: components["schemas"]["CurrenciesEnum"];
        };
        /**
         * Format: date
         * @description The last day that the offer is valid, in YYYY-MM-DD format.
         * @example 2024-06-01
         */
        Expiration: string;
        Offer: {
            /**
             * @description Spend required to earn the bonus, in USD.
             * @example 1000
             */
            spend: number;
            amount: components["schemas"]["OfferAmount"][];
            /**
             * @description Days required to earn the bonus.
             * @example 90
             */
            days: number;
            expiration?: components["schemas"]["Expiration"];
            /** @description Whether the offer is publicly available. A value of `true` indicates it's public. A value of `false` indicates it's a targeted offer. */
            isPublic?: boolean;
            /** @default [] */
            credits: components["schemas"]["Credit"][];
            /** @description Additional relevant details about the offer. Generally only provided if there's things you should know outside of initial face value. */
            details?: string;
            /**
             * @description A URL that takes you directly to the offer.
             * @example https://example.com
             */
            url?: string;
            /** @description If the creator of this API has this card and can refer you, this  field will be populated with a link to that. Please consider using it if you'd like to support the creator. Thank you! */
            referralUrl?: string;
        };
        /** @description The amount of the offer. No currency provided means it's the same currency as the card. */
        OfferAmount: {
            /** @example 100 */
            amount: number;
            currency?: components["schemas"]["CurrenciesEnum"];
        };
        CreditCard: {
            /**
             * @description A unique identifier for this card. Basically a primary key.
             * @example 7501f96ab2cfc952c2ef9119
             */
            cardId: string;
            /**
             * @description The name of the card. Does not include the issuer.
             * @example Freedom Flex
             */
            name: string;
            issuer: components["schemas"]["IssuersEnum"];
            network: components["schemas"]["NetworksEnum"];
            currency: components["schemas"]["CurrenciesEnum"];
            /** @description Whether this card counts towards the 5/24 rule. This field is generally only included if its an exception to the rule provided on TPG's overview page @ https://thepointsguy.com/guide/ultimate-guide-chase-5-24-rule/ */
            countsTowards524?: boolean;
            /** @description Additional relevant details about the card. Usually not provided. */
            details?: string;
            /** @description Whether this card is a business card. */
            isBusiness: boolean;
            /** @description The annual fee of the card, in USD. */
            annualFee: number;
            /** @description Whether the annual fee is waived for the first year. */
            isAnnualFeeWaived: boolean;
            /**
             * @description The universal cashback percent of the card. A value of 1.5 corresponds to 1.5%. This is the percent that you earn on all purchases, regardless of category.
             * @example 1.5
             */
            universalCashbackPercent: number;
            /** @description The URL of the card's main webpage. */
            url: string;
            /**
             * @description A URL to an image of the card. Prefix with "https://offeroptimist.com" to get a full, valid URL.
             * @example /images/chase/freedom-flex.png
             */
            imageUrl: string;
            /** @default [] */
            credits: components["schemas"]["Credit"][];
            /** @default [] */
            offers: components["schemas"]["Offer"][];
            /**
             * @description An array of the best recent historical offers for the card. We define "recent" as within the last three years or so.
             * @default []
             */
            historicalOffers: components["schemas"]["Offer"][];
            /**
             * @description Whether the card has been discontinued.
             * @default false
             */
            discontinued: boolean;
        };
        /** @enum {string} */
        CurrenciesEnum: "BEST_WESTERN" | "BREEZE" | "HILTON" | "HYATT" | "IHG" | "MARRIOTT" | "RADISSON" | "WYNDHAM" | "CHOICE" | "AEROPLAN" | "ALASKA" | "AMERICAN" | "ANA" | "AVIANCA" | "AVIOS" | "CATHAY_PACIFIC" | "DELTA" | "EMIRATES" | "FRONTIER" | "FLYING_BLUE" | "HAWAIIAN" | "JETBLUE" | "KOREAN" | "LATAM" | "LUFTHANSA" | "SOUTHWEST" | "SPIRIT" | "UNITED" | "VIRGIN" | "AMERICAN_EXPRESS" | "BANK_OF_AMERICA" | "BARCLAYS" | "BILT" | "BREX" | "CHASE" | "CITI" | "CAPITAL_ONE" | "DISCOVER" | "US_BANK" | "WELLS_FARGO" | "CARNIVAL" | "AMTRAK" | "PENFED" | "EXPEDIA" | "USD";
        /** @enum {string} */
        IssuersEnum: "AMERICAN_EXPRESS" | "BANK_OF_AMERICA" | "BARCLAYS" | "BREX" | "CHASE" | "CAPITAL_ONE" | "CITI" | "DISCOVER" | "FIRST" | "FNBO" | "PENFED" | "PNC" | "SYNCHRONY" | "US_BANK" | "WEB_BANK" | "WELLS_FARGO";
        /** @enum {string} */
        NetworksEnum: "VISA" | "MASTERCARD" | "AMERICAN_EXPRESS" | "DISCOVER";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getJsonData: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Object with generated text. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreditCard"][];
                };
            };
        };
    };
    getCsvData: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description CSV-formatted string of card data. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/csv": string;
                };
            };
        };
    };
    getYamlData: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description YAML-formatted string of card data. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/yaml": string;
                };
            };
        };
    };
}
